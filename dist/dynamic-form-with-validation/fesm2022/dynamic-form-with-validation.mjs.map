{"version":3,"file":"dynamic-form-with-validation.mjs","sources":["../../../projects/dynamic-form-with-validation/src/lib/dynamic-form-with-validation.component.ts","../../../projects/dynamic-form-with-validation/src/lib/dynamic-form-with-validation.module.ts","../../../projects/dynamic-form-with-validation/src/dynamic-form-with-validation.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\n\n// Interfaces\nexport interface IFormField {\n  name: string;\n  type: string;\n  validators: IFormValidation;\n  label: string;\n  value: string;\n}\n\nexport interface IFormValidation {\n  required?: boolean;\n  pattern?: RegExp | string;\n  email?: boolean;\n}\n\n@Component({\n  selector: \"dynamic-form\",\n  template: `\n    <div class=\"form-container\">\n      <div class=\"card-title\">\n        <h1>Login</h1>\n      </div>\n      <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"loginForm\">\n        <div *ngFor=\"let field of fieldList\" class=\"field-container\">\n          <label [attr.for]=\"field.name\">{{ field.label }}</label>\n          <input\n            class=\"input-field\"\n            [ngClass]=\"{ error: isTouched(field.name) && !isValid(field.name) }\"\n            [formControlName]=\"field.name\"\n            [type]=\"field.type\"\n          />\n          <div\n            class=\"error-message\"\n            *ngIf=\"isTouched(field.name) && !isValid(field.name)\"\n          >\n            <div *ngIf=\"loginForm.controls[field.name].errors.required\">\n              {{ field.label }} {{ errorMessages.required }}\n            </div>\n            <div\n              *ngIf=\"\n                loginForm.controls[field.name].errors.email ||\n                loginForm.controls[field.name].errors.pattern\n              \"\n            >\n              {{ errorMessages.invalid }} {{ field.label }}.\n            </div>\n          </div>\n        </div>\n        <div class=\"btn-container\">\n          <button type=\"submit\" [disabled]=\"!loginForm.valid\">\n            {{ buttonLabel }}\n          </button>\n        </div>\n      </form>\n    </div>\n  `,\n  styles: [\n    `\n      .form-container {\n        background: linear-gradient(\n          to right bottom,\n          rgba(255, 255, 255, 0.8),\n          rgba(255, 255, 255, 0.3)\n        );\n        border-radius: 0.5rem;\n        z-index: 2;\n        backdrop-filter: blur(2rem);\n        display: flex;\n        justify-content: space-between;\n        padding: 2rem;\n        width: 30rem;\n        box-shadow: 6px 6px 20px rgba(122, 122, 122, 0.212);\n      }\n      .form-container .card-title {\n        width: 30%;\n      }\n      .form-container form {\n        width: 70%;\n        padding: 0rem 0 2.3rem 1rem;\n      }\n      .form-container form label {\n        font-size: 1.2rem;\n        margin-bottom: 0.2rem;\n      }\n      .form-container form .field-container {\n        width: 100%;\n        margin-bottom: 1rem;\n      }\n      .form-container form .field-container .input-field {\n        display: block;\n        width: 97%;\n        border-radius: 0.5rem;\n        height: 3rem;\n        margin: 0.3rem 0;\n        font-size: 1.1rem;\n        padding-left: 0.5rem;\n        border: 1px solid #d7d7d7;\n        outline: none;\n      }\n      .form-container form .field-container .error {\n        border: 1px solid #f00;\n      }\n      .form-container form .field-container .error-message {\n        color: #f00;\n      }\n      .form-container form .btn-container {\n        display: flex;\n        justify-content: flex-end;\n        height: 2rem;\n      }\n      .form-container form .btn-container button {\n        color: #fff;\n        text-align: center;\n        border: none;\n        border-radius: 0.5rem;\n        min-width: 10rem;\n        height: 3rem;\n        font-size: 1.2rem;\n        margin-top: 1rem;\n      }\n      .form-container form .btn-container button {\n        background: linear-gradient(to right top, #000000e8, #00000061);\n        outline: none;\n        cursor: pointer;\n      }\n      .form-container form .btn-container button[disabled] {\n        background: #b4b4b4;\n        cursor: not-allowed;\n      }\n      @media screen and (max-width: \"625px\"), (max-width: \"425px\") {\n        .form-container {\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n          width: 15rem;\n        }\n        .form-container h1 {\n          margin: 0 0 2rem 0;\n        }\n        .form-container form {\n          width: 100%;\n        }\n        .form-container button {\n          width: 100%;\n        }\n      }\n    `\n  ]\n})\nexport class DynamicFormWithValidationComponent {\n  @Input() fieldList: Array<IFormField>;\n  @Input() buttonLabel?: string = \"Submit\";\n  @Output() formSubmit = new EventEmitter<any>();\n  public loginForm: FormGroup;\n  public errorMessages = {\n    required: \"is a required field.\",\n    invalid: \"Please provide valid\"\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n    this.loginForm = this.buildFormGroup();\n  }\n\n  buildFormGroup() {\n    const group = {};\n    let validatorList = [];\n    this.fieldList?.forEach(field => {\n      if (field.validators.required) {\n        validatorList.push(Validators.required);\n      }\n      if (field.validators.email) {\n        validatorList.push(Validators.email);\n      }\n      if (field.validators.pattern) {\n        validatorList.push(Validators.pattern(field.validators.pattern));\n      }\n      group[field.name] = new FormControl(field.value || \"\", validatorList);\n      validatorList = [];\n    });\n    return new FormGroup(group);\n  }\n\n  isValid(fieldName) {\n    return this.loginForm.controls[fieldName].valid;\n  }\n\n  isTouched(fieldName) {\n    return this.loginForm.controls[fieldName].touched;\n  }\n\n  onSubmit() {\n    const updatedFormData = {};\n    this.fieldList.forEach(field => {\n      updatedFormData[field.name] = this.loginForm.controls[field.name].value;\n    });\n    this.formSubmit.emit(updatedFormData);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DynamicFormWithValidationComponent } from './dynamic-form-with-validation.component';\n\n\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule\n  ],\n  declarations: [DynamicFormWithValidationComponent],\n  exports: [DynamicFormWithValidationComponent]\n})\nexport class DynamicFormWithValidationModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}